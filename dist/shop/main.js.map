{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_interceptors/error-interceptor.service.ts","webpack:///./src/app/_interceptors/jwt-interceptor.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/enum/CategoryType.ts","webpack:///./src/app/enum/OrderStatus.ts","webpack:///./src/app/enum/ProductStatus.ts","webpack:///./src/app/enum/Role.ts","webpack:///./src/app/models/ProductInOrder.ts","webpack:///./src/app/models/User.ts","webpack:///./src/app/models/productInfo.ts","webpack:///./src/app/pages/bill/bill.component.css","webpack:///./src/app/pages/bill/bill.component.html","webpack:///./src/app/pages/bill/bill.component.ts","webpack:///./src/app/pages/card/card.component.css","webpack:///./src/app/pages/card/card.component.html","webpack:///./src/app/pages/card/card.component.ts","webpack:///./src/app/pages/cart/cart.component.css","webpack:///./src/app/pages/cart/cart.component.html","webpack:///./src/app/pages/cart/cart.component.ts","webpack:///./src/app/pages/login/login.component.css","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/order-detail/order-detail.component.css","webpack:///./src/app/pages/order-detail/order-detail.component.html","webpack:///./src/app/pages/order-detail/order-detail.component.ts","webpack:///./src/app/pages/order/order.component.css","webpack:///./src/app/pages/order/order.component.html","webpack:///./src/app/pages/order/order.component.ts","webpack:///./src/app/pages/product-detail/detail.component.css","webpack:///./src/app/pages/product-detail/detail.component.html","webpack:///./src/app/pages/product-detail/detail.component.ts","webpack:///./src/app/pages/product-edit/product-edit.component.css","webpack:///./src/app/pages/product-edit/product-edit.component.html","webpack:///./src/app/pages/product-edit/product-edit.component.ts","webpack:///./src/app/pages/product-list/product.list.component.css","webpack:///./src/app/pages/product-list/product.list.component.html","webpack:///./src/app/pages/product-list/product.list.component.ts","webpack:///./src/app/pages/signup/signup.component.css","webpack:///./src/app/pages/signup/signup.component.html","webpack:///./src/app/pages/signup/signup.component.ts","webpack:///./src/app/pages/user-edit/user-detail.component.css","webpack:///./src/app/pages/user-edit/user-detail.component.html","webpack:///./src/app/pages/user-edit/user-detail.component.ts","webpack:///./src/app/parts/navigation/navigation.component.css","webpack:///./src/app/parts/navigation/navigation.component.html","webpack:///./src/app/parts/navigation/navigation.component.ts","webpack:///./src/app/parts/pagination/pagination.component.css","webpack:///./src/app/parts/pagination/pagination.component.html","webpack:///./src/app/parts/pagination/pagination.component.ts","webpack:///./src/app/services/cart.service.ts","webpack:///./src/app/services/order.service.ts","webpack:///./src/app/services/product.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {UserService} from \"../services/user.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private userService: UserService\r\n    ) {\r\n    }\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n        const currentUser = this.userService.currentUserValue;\r\n        if (currentUser) {\r\n            // check if route is restricted by role\r\n            if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\r\n                console.log(currentUser.role + \"fail in \" + route.data.roles);\r\n                // role not authorised so redirect to home page\r\n                this.router.navigate(['/']);\r\n                return false;\r\n            }\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        console.log(\"Need log in\");\r\n        // not logged in so redirect to login page with the return url{queryParams: {returnUrl: state.url}}\r\n        this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\r\n        return false;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {UserService} from \"../services/user.service\";\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport {catchError} from \"rxjs/operators\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private userService: UserService,\r\n                private router: Router) {\r\n    }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(catchError(err => {\r\n      if (err.status === 401) {\r\n        // auto logout if 401 response returned from api\r\n        this.userService.logout();\r\n          this.router.navigate(['/login']);\r\n      }\r\n\r\n        const error = err.error || err.statusText;\r\n      return throwError(error);\r\n    }))\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {UserService} from \"../services/user.service\";\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n\r\n    constructor(private userService: UserService,\r\n    ) {\r\n\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        const currentUser = this.userService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `${currentUser.type} ${currentUser.token}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {CardComponent} from './pages/card/card.component';\r\nimport {LoginComponent} from './pages/login/login.component';\r\nimport {SignupComponent} from './pages/signup/signup.component';\r\nimport {DetailComponent} from './pages/product-detail/detail.component';\r\nimport {CartComponent} from './pages/cart/cart.component';\r\nimport {AuthGuard} from \"./_guards/auth.guard\";\r\nimport {OrderComponent} from \"./pages/order/order.component\";\r\nimport {OrderDetailComponent} from \"./pages/order-detail/order-detail.component\";\r\nimport {ProductListComponent} from \"./pages/product-list/product.list.component\";\r\nimport {UserDetailComponent} from \"./pages/user-edit/user-detail.component\";\r\nimport {ProductEditComponent} from \"./pages/product-edit/product-edit.component\";\r\nimport { BillComponent } from \"./pages/bill/bill.component\";\r\nimport {Role} from \"./enum/Role\";\r\n\r\nconst routes: Routes = [\r\n    {path: '', redirectTo: '/product', pathMatch: 'full'},\r\n    {path: 'product/:id', component: DetailComponent},\r\n    {path: 'category/:id', component: CardComponent},\r\n    {path: 'product', component: CardComponent},\r\n    {path: 'category', component: CardComponent},\r\n    {path: 'login', component: LoginComponent},\r\n    {path: 'logout', component: LoginComponent},\r\n    {path: 'register', component: SignupComponent},\r\n    {path: 'cart', component: CartComponent},\r\n    {path: 'success', component: SignupComponent},\r\n    {path: 'order/:id', component: OrderDetailComponent, canActivate: [AuthGuard]},\r\n    {path: 'order', component: OrderComponent, canActivate: [AuthGuard]},\r\n    {path: 'seller', redirectTo: 'seller/product', pathMatch: 'full'},\r\n    {\r\n        path: 'seller/product',\r\n        component: ProductListComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {roles: [Role.Manager, Role.Employee]}\r\n    },\r\n    {\r\n        path: 'profile',\r\n        component: UserDetailComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'seller/product/:id/edit',\r\n        component: ProductEditComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {roles: [Role.Manager, Role.Employee]}\r\n    },\r\n    {\r\n        path: 'seller/product/:id/new',\r\n        component: ProductEditComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {roles: [Role.Employee]}\r\n    },\r\n    {\r\n        path: 'seller/product/new',\r\n        component: ProductEditComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {roles: [Role.Employee]}\r\n    },\r\n    {path: 'bill', component: BillComponent}\r\n];\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        RouterModule.forRoot(routes)//{onSameUrlNavigation: 'reload'}\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n<app-navigation></app-navigation>\\r\\n<router-outlet></router-outlet>\\r\\n    <div class=\\\"container\\\">\\r\\n        <br>\\r\\n        <br>\\r\\n        <hr>\\r\\n        <div class=\\\"text-center\\\">\\r\\n            <a style=\\\"color: inherit\\\" href=\\\"https://github.com/dataoct\\\"><i class=\\\"fab fa-github fa-3x\\\"></i></a>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!--Copyright-->\\r\\n        <div class=\\\"footer-copyright py-3 text-center\\\">\\r\\n            © 2021 Copyright:\\r\\n            <a href=\\\"https://dataoct.com\\\"> Dataoct.com </a>\\r\\n        </div>\\r\\n        <!--/.Copyright-->\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'shop';\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {NavigationComponent} from './parts/navigation/navigation.component';\r\nimport {CardComponent} from './pages/card/card.component';\r\nimport {PaginationComponent} from './parts/pagination/pagination.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {LoginComponent} from './pages/login/login.component';\r\nimport {SignupComponent} from './pages/signup/signup.component';\r\nimport {DetailComponent} from './pages/product-detail/detail.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {CartComponent} from './pages/cart/cart.component';\r\nimport {CookieService} from \"ngx-cookie-service\";\r\nimport {ErrorInterceptor} from \"./_interceptors/error-interceptor.service\";\r\nimport {JwtInterceptor} from \"./_interceptors/jwt-interceptor.service\";\r\nimport {OrderComponent} from './pages/order/order.component';\r\nimport {OrderDetailComponent} from './pages/order-detail/order-detail.component';\r\nimport {ProductListComponent} from './pages/product-list/product.list.component';\r\nimport {UserDetailComponent} from './pages/user-edit/user-detail.component';\r\nimport {ProductEditComponent} from './pages/product-edit/product-edit.component';\r\nimport { BillComponent } from './pages/bill/bill.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavigationComponent,\r\n        CardComponent,\r\n        PaginationComponent,\r\n        LoginComponent,\r\n        SignupComponent,\r\n        DetailComponent,\r\n        CartComponent,\r\n        OrderComponent,\r\n        OrderDetailComponent,\r\n        ProductListComponent,\r\n        UserDetailComponent,\r\n        ProductEditComponent,\r\n        BillComponent,\r\n\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n\r\n    ],\r\n    providers: [CookieService,\r\n        {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\r\n        {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export enum CategoryType {\r\n    \"Books\", \"Food\", \"Clothes\", \"Drink\"\r\n}\r\n","export enum OrderStatus {\r\n    \"New\",\r\n    \"Finished\",\r\n    \"Cancelled\"\r\n}\r\n","export enum ProductStatus {\r\n    \"Available\", \"Unavailable\"\r\n}\r\n","export enum Role {\r\n    Customer = 'ROLE_CUSTOMER',\r\n    Employee = 'ROLE_EMPLOYEE',\r\n    Manager = 'ROLE_MANAGER'\r\n}\r\n","import {ProductInfo} from \"./productInfo\";\r\n\r\nexport class ProductInOrder {\r\n    productId: string;\r\n    productName: string;\r\n    productPrice: number;\r\n    productStock: number;\r\n    productDescription: string;\r\n    productIcon: string;\r\n    categoryType: number;\r\n    count: number;\r\n\r\n    constructor(productInfo:ProductInfo, quantity = 1){\r\n        this.productId = productInfo.productId;\r\n        this.productName = productInfo.productName;\r\n        this.productPrice = productInfo.productPrice;\r\n        this.productStock = productInfo.productStock;\r\n        this.productDescription = productInfo.productDescription;;\r\n        this.productIcon = productInfo.productIcon;\r\n        this.categoryType = productInfo.categoryType;\r\n        this.count = quantity;\r\n    }\r\n}\r\n","import {Role} from \"../enum/Role\";\r\n\r\nexport class User {\r\n\r\n    email: string;\r\n\r\n    password: string;\r\n\r\n    name: string;\r\n\r\n    phone: string;\r\n\r\n    address: string;\r\n\r\n    active: boolean;\r\n\r\n    role: string;\r\n\r\n    constructor(){\r\n        this.active = true;\r\n        this.role = Role.Customer;\r\n    }\r\n}\r\n","import {ProductInOrder} from \"./ProductInOrder\";\r\n\r\nexport class ProductInfo {\r\n    productId: string;\r\n    productName: string;\r\n    productPrice: number;\r\n    productStock: number;\r\n    productDescription: string;\r\n    productIcon: string;\r\n    productStatus: number; // 0: onsale 1: offsale\r\n    categoryType: number;\r\n    createTime: string;\r\n    updateTime: string;\r\n\r\n\r\n    constructor(productInOrder?: ProductInOrder) {\r\n        if (productInOrder) {\r\n            this.productId = productInOrder.productId;\r\n            this.productName = productInOrder.productName;\r\n            this.productPrice = productInOrder.productPrice;\r\n            this.productStock = productInOrder.productStock;\r\n            this.productDescription = productInOrder.productDescription;\r\n            this.productIcon = productInOrder.productIcon;\r\n            this.categoryType = productInOrder.categoryType;\r\n            this.productStatus = 0;\r\n        } else {\r\n            this.productId = '';\r\n            this.productName = '';\r\n            this.productPrice = 20;\r\n            this.productStock = 100;\r\n            this.productDescription = '';\r\n            this.productIcon = '';\r\n            this.categoryType = 0;\r\n            this.productStatus = 0;\r\n        }\r\n    }\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2JpbGwvYmlsbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  bill works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bill',\r\n  templateUrl: './bill.component.html',\r\n  styleUrls: ['./bill.component.css']\r\n})\r\nexport class BillComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhcmQvY2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">{{title}}</h1>\\r\\n<div class=\\\"row card-deck text-center\\\">\\r\\n  <div *ngFor=\\\"let productInfo of page?.content\\\" class=\\\"col-lg-4 \\\">\\r\\n    <div class=\\\"card mb-4\\\"  >\\r\\n      <img height=\\\"50%\\\" class=\\\"card-img-top\\\" src=\\\"{{productInfo.productIcon}}\\\" alt=\\\"{{productInfo.productName}}\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4 class=\\\"card-title \\\">{{productInfo.productName}}</h4>\\r\\n        <div class=\\\"text-left\\\">\\r\\n          <p class=\\\"card-test\\\"><strong>Description: </strong>{{productInfo.productDescription}}</p>\\r\\n          <p class=\\\"card-text\\\"><strong>Price: </strong>{{productInfo.productPrice | currency:'INR'}}</p>\\r\\n          <p class=\\\"card-text\\\"><strong>Stock: </strong>{{productInfo.productStock}}</p>\\r\\n        </div>\\r\\n        <br>\\r\\n        <a routerLink=\\\"/product/{{productInfo.productId}}\\\" *ngIf=\\\"productInfo.productStatus == 0; else offBlock\\\"\\r\\n           class=\\\"btn btn-primary btn-lg\\\"\\r\\n        >Get It!</a>\\r\\n        <ng-template #offBlock><a class=\\\"btn btn-secondary btn-lg disabled\\\">Unavailable</a></ng-template>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-pagination  [currentPage]=\\\"page\\\" ></app-pagination>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\n// import {prod, products} from '../shared/mockData';\r\nimport {ProductService} from '../../services/product.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Subscription} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.css']\r\n})\r\nexport class CardComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  title: string;\r\n  page: any;\r\n  private paramSub: Subscription;\r\n  private querySub: Subscription;\r\n\r\n\r\n  constructor(private productService: ProductService,\r\n              private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.querySub = this.route.queryParams.subscribe(() => {\r\n      this.update();\r\n    });\r\n    this.paramSub = this.route.params.subscribe(() => {\r\n      this.update();\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.querySub.unsubscribe();\r\n    this.paramSub.unsubscribe();\r\n  }\r\n\r\n  update() {\r\n    if (this.route.snapshot.queryParamMap.get('page')) {\r\n      const currentPage = +this.route.snapshot.queryParamMap.get('page');\r\n      const size = +this.route.snapshot.queryParamMap.get('size');\r\n      this.getProds(currentPage, size);\r\n    } else {\r\n      this.getProds();\r\n    }\r\n  }\r\n  getProds(page: number = 1, size: number = 3) {\r\n    if (this.route.snapshot.url.length == 1) {\r\n      this.productService.getAllInPage(+page, +size)\r\n        .subscribe(page => {\r\n          this.page = page;\r\n          this.title = 'Get Whatever You Want!';\r\n        });\r\n    } else { //  /category/:id\r\n      const type = this.route.snapshot.url[1].path;\r\n      this.productService.getCategoryInPage(+type, page, size)\r\n        .subscribe(categoryPage => {\r\n          this.title = categoryPage.category;\r\n          this.page = categoryPage.page;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhcnQvY2FydC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">My Cart</h1>\\r\\n\\r\\n\\r\\n<div class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n    <strong> 24x7 Support </strong>  WhatsApp No. +91-83059-68583\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n\\r\\n<!--Cart Detail Table-->\\r\\n<table class=\\\"table table-striped text-center\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th scope=\\\"col\\\">Photo</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n        <th scope=\\\"col\\\">Price</th>\\r\\n        <th scope=\\\"col\\\">Quantity</th>\\r\\n        <th scope=\\\"col\\\">Subtotal</th>\\r\\n        <th scope=\\\"col\\\">Action</th>\\r\\n\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n\\r\\n    <tr *ngFor=\\\"let productInOrder of productInOrders\\\">\\r\\n        <th class=\\\"align-middle\\\" scope=\\\"row\\\">\\r\\n            <a routerLink=\\\"/product/{{productInOrder.productId}}\\\"><img height=\\\"100px\\\"\\r\\n                src=\\\"{{productInOrder.productIcon}}\\\"\\r\\n                alt=\\\"{{productInOrder.productName}}\\\"></a>\\r\\n        </th>\\r\\n        <td class=\\\"align-middle\\\"><a\\r\\n                routerLink=\\\"/product/{{productInOrder.productId}}\\\">{{productInOrder.productName}}</a></td>\\r\\n        <td class=\\\"align-middle\\\">{{productInOrder.productPrice | currency:'INR'}}</td>\\r\\n\\r\\n        <td class=\\\"align-middle\\\">\\r\\n            <a (click)=\\\"minusOne(productInOrder)\\\"><i class=\\\"fa fa-minus\\\"></i></a>\\r\\n            <input min=\\\"1\\\" id=\\\"{{productInOrder.productId}}\\\"\\r\\n                   [max]=productInOrder.productStock\\r\\n                   [(ngModel)]=\\\"productInOrder.count\\\"\\r\\n                   (change)=\\\"onChange(productInOrder)\\\"\\r\\n                   size=\\\"5\\\"\\r\\n                   type=\\\"number\\\"\\r\\n                   required\\r\\n                   name='count'>\\r\\n            <a (click)=\\\"addOne(productInOrder)\\\"> <i class=\\\"fa fa-plus\\\"></i></a>\\r\\n        </td>\\r\\n\\r\\n        <td class=\\\"align-middle\\\">{{productInOrder.productPrice * productInOrder.count|currency:'INR'}}</td>\\r\\n        <td class=\\\"align-middle\\\">\\r\\n            <a (click)=\\\"remove(productInOrder)\\\" routerLink=\\\"./\\\">Remove</a>\\r\\n        </td>\\r\\n\\r\\n    </tr>\\r\\n\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<div *ngIf=\\\"productInOrders?.length > 0; else empty\\\">\\r\\n    <h5 style=\\\"display: inline;\\\">Total: {{total | currency:'INR'}}</h5>\\r\\n    <button (click)=\\\"checkout()\\\" class=\\\"btn btn-warning float-right\\\">Checkout</button>\\r\\n</div>\\r\\n<ng-template #empty>\\r\\n    <h4 class=\\\"text-muted text-center\\\">Cart is empty. Go to get something! :)</h4>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\"","import {AfterContentChecked, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {CartService} from '../../services/cart.service';\r\nimport {Subject, Subscription} from 'rxjs';\r\nimport {UserService} from '../../services/user.service';\r\nimport {JwtResponse} from '../../response/JwtResponse';\r\nimport {ProductInOrder} from '../../models/ProductInOrder';\r\nimport {debounceTime, switchMap} from 'rxjs/operators';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Role} from '../../enum/Role';\r\n\r\n@Component({\r\n    selector: 'app-cart',\r\n    templateUrl: './cart.component.html',\r\n    styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit, OnDestroy, AfterContentChecked {\r\n\r\n    alert:boolean=false\r\n    constructor(private cartService: CartService,\r\n                private userService: UserService,\r\n                private router: Router) {\r\n        this.userSubscription = this.userService.currentUser.subscribe(user => this.currentUser = user);\r\n    }\r\n\r\n    productInOrders = [];\r\n    total = 0;\r\n    currentUser: JwtResponse;\r\n    userSubscription: Subscription;\r\n\r\n    private updateTerms = new Subject<ProductInOrder>();\r\n    sub: Subscription;\r\n\r\n    static validateCount(productInOrder) {\r\n        const max = productInOrder.productStock;\r\n        if (productInOrder.count > max) {\r\n            productInOrder.count = max;\r\n        } else if (productInOrder.count < 1) {\r\n            productInOrder.count = 1;\r\n        }\r\n        console.log(productInOrder.count);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.cartService.getCart().subscribe(prods => {\r\n            this.productInOrders = prods;\r\n        });\r\n\r\n        this.sub = this.updateTerms.pipe(\r\n            // wait 300ms after each keystroke before considering the term\r\n            debounceTime(300),\r\n            //\r\n            // ignore new term if same as previous term\r\n            // Same Object Reference, not working here\r\n            //  distinctUntilChanged((p: ProductInOrder, q: ProductInOrder) => p.count === q.count),\r\n            //\r\n            // switch to new search observable each time the term changes\r\n            switchMap((productInOrder: ProductInOrder) => this.cartService.update(productInOrder))\r\n        ).subscribe(prod => {\r\n                if (prod) { throw new Error(); }\r\n            },\r\n            _ => console.log('Update Item Failed'));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (!this.currentUser) {\r\n            this.cartService.storeLocalCart();\r\n        }\r\n        this.userSubscription.unsubscribe();\r\n    }\r\n\r\n    ngAfterContentChecked() {\r\n        this.total = this.productInOrders.reduce(\r\n            (prev, cur) => prev + cur.count * cur.productPrice, 0);\r\n    }\r\n\r\n    addOne(productInOrder) {\r\n        productInOrder.count++;\r\n        CartComponent.validateCount(productInOrder);\r\n        console.log('addOne');\r\n\r\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\r\n    }\r\n\r\n    minusOne(productInOrder) {\r\n        productInOrder.count--;\r\n        CartComponent.validateCount(productInOrder);\r\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\r\n    }\r\n\r\n    onChange(productInOrder) {\r\n        CartComponent.validateCount(productInOrder);\r\n        console.log('onChange');\r\n\r\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\r\n    }\r\n\r\n\r\n    remove(productInOrder: ProductInOrder) {\r\n        this.cartService.remove(productInOrder).subscribe(\r\n            success => {\r\n               this.productInOrders = this.productInOrders.filter(e => e.productId !== productInOrder.productId);\r\n                console.log('Cart: ' + this.productInOrders);\r\n            },\r\n            _ => console.log('Remove Cart Failed'));\r\n    }\r\n\r\n    checkout() {\r\n        if (!this.currentUser) {\r\n            this.router.navigate(['/login'], {queryParams: {returnUrl: this.router.url}});\r\n            console.log('checkout 1');\r\n        } else if (this.currentUser.role !== Role.Customer) {\r\n            this.router.navigate(['/seller']);\r\n            console.log('checkout 2');\r\n\r\n        } else {\r\n            this.cartService.checkout().subscribe(\r\n                _ => {\r\n                    this.productInOrders = [];\r\n                },\r\n                error1 => {\r\n                    console.log('Checkout Cart Failed');\r\n                });\r\n                console.log('checkout 3');\r\n                this.alert=true\r\n                alert(' Please Confirm')\r\n            this.router.navigate(['/']);\r\n           \r\n        }        \r\n    }\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Sign In</h1>\\r\\n<div style=\\\"width:40%; margin: 25px auto\\\">\\r\\n\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"isInvalid\\\">\\r\\n        Invalid username and password.\\r\\n    </div>\\r\\n    <div class=\\\"alert alert-info\\\" *ngIf=\\\"isLogout\\\">\\r\\n        You have been logged out.\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <form #form='ngForm' (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Email address</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\"\\r\\n                   required autofocus [(ngModel)]=\\\"model.username\\\" #email=\\\"ngModel\\\" autocomplete=\\\"email\\\" >\\r\\n            <div [hidden]=\\\"email.valid || email.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Email is required\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Password</label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control form-control-lg\\\" id=\\\"password\\\" name=\\\"password\\\"  autocomplete=\\\"password\\\"\\r\\n                   placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\" #password='ngModel'>\\r\\n            <div [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Email is required\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div>\\r\\n                <input type=\\\"checkbox\\\" id=\\\"remember_me\\\" name=\\\"remember-me\\\" [(ngModel)]=\\\"model.remembered\\\">\\r\\n                <label for=\\\"remember_me\\\" class=\\\"inline\\\">Remember me</label>\\r\\n                <a class=\\\"float-right\\\" routerLink=\\\"/register\\\">Sign Up</a>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <button [disabled]=\\\"!form.form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\">Sign In</button>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n    <!-- \\r\\n    <div style=\\\"text-align: center\\\">\\r\\n    <br><br><br><br>\\r\\n    <strong>Sample Users</strong><br>\\r\\n    <table style=\\\"width: 100%;\\\" id=\\\"sampleLoginTable\\\">\\r\\n        <tr>\\r\\n            <td><a\\r\\n                    (click)=\\\"fillLoginFields('customer1@email.com','123')\\\"\\r\\n                    href=\\\"javascript:void(0)\\\">customer1</a></td>\\r\\n            <td><a\\r\\n                    (click)=\\\"fillLoginFields('employee1@email.com','123')\\\"\\r\\n                    href=\\\"javascript:void(0)\\\">employee1</a></td>\\r\\n            <td><a\\r\\n                    (click)=\\\"fillLoginFields('manager1@email.com','123')\\\"\\r\\n                    href=\\\"javascript:void(0)\\\">manager1</a></td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    </div> \\r\\n    -->\\r\\n\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {Role} from \"../../enum/Role\";\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    isInvalid: boolean;\r\n    isLogout: boolean;\r\n    submitted = false;\r\n    model: any = {\r\n        username: '',\r\n        password: '',\r\n        remembered: false\r\n    };\r\n\r\n    returnUrl = '/';\r\n\r\n    constructor(private userService: UserService,\r\n                private router: Router,\r\n                private route: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        let params = this.route.snapshot.queryParamMap;\r\n        this.isLogout = params.has('logout');\r\n        this.returnUrl = params.get('returnUrl');\r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        this.userService.login(this.model).subscribe(\r\n            user => {\r\n                if (user) {\r\n                    if (user.role != Role.Customer) {\r\n\r\n                        this.returnUrl = '/seller';\r\n                    }\r\n                    this.router.navigateByUrl(this.returnUrl);\r\n                } else {\r\n                    this.isLogout = false;\r\n                    this.isInvalid = true;\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    fillLoginFields(u, p) {\r\n        this.model.username = u;\r\n        this.model.password = p;\r\n        this.onSubmit();\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL29yZGVyLWRldGFpbC9vcmRlci1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Order Detail</h1>\\r\\n<table class=\\\"table table-striped text-center\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th scope=\\\"col\\\">Photo</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n        <th scope=\\\"col\\\">Description</th>\\r\\n        <th scope=\\\"col\\\">Price</th>\\r\\n        <th scope=\\\"col\\\">Quantity</th>\\r\\n        <th scope=\\\"col\\\">Subtotal</th>\\r\\n\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of (order$ | async)?.products\\\">\\r\\n        <th class=\\\"align-middle\\\" scope=\\\"row\\\">\\r\\n            <a routerLink=\\\"/seller/product/{{item.productId}}/edit\\\"><img height=\\\"100px\\\" src=\\\"{{item.productIcon}}\\\"\\r\\n                                                                         alt=\\\"{{item.productName}}\\\"></a>\\r\\n        </th>\\r\\n        <td class=\\\"align-middle\\\"><a routerLink=\\\"/seller/product/{{item.productId}}/edit\\\">{{item.productName}}</a></td>\\r\\n        <td class=\\\"align-middle\\\">{{item.productDescription}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{item.productPrice | currency:'INR'}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{item.count}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{(item.productPrice * item.count | currency:'INR')}}</td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<h5 style=\\\"display: inline\\\" class=\\\"float-right\\\">Total: {{(order$ | async)?.orderAmount | currency:'INR'}}</h5>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {OrderService} from \"../../services/order.service\";\r\nimport {Order} from \"../../models/Order\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-order-detail',\r\n    templateUrl: './order-detail.component.html',\r\n    styleUrls: ['./order-detail.component.css']\r\n})\r\nexport class OrderDetailComponent implements OnInit {\r\n\r\n    constructor(private orderService: OrderService,\r\n                private route: ActivatedRoute) {\r\n    }\r\n\r\n    order$: Observable<Order>;\r\n\r\n    ngOnInit() {\r\n        // this.items$ = this.route.paramMap.pipe(\r\n        //     map(paramMap =>paramMap.get('id')),\r\n        //     switchMap((id:string) => this.orderService.show(id))\r\n        // )\r\n        this.order$ = this.orderService.show(this.route.snapshot.paramMap.get('id'));\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL29yZGVyL29yZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Orders</h1>\\r\\n\\r\\n<table class=\\\"table table-striped text-center\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th scope=\\\"col\\\">Order #</th>\\r\\n        <th scope=\\\"col\\\">Customer Name</th>\\r\\n        <th scope=\\\"col\\\">Customer Email</th>\\r\\n        <th scope=\\\"col\\\">Customer phone</th>\\r\\n        <th scope=\\\"col\\\">Shipping Address</th>\\r\\n        <th scope=\\\"col\\\">Total</th>\\r\\n        <th scope=\\\"col\\\">Order Data</th>\\r\\n        <th scope=\\\"col\\\">Status</th>\\r\\n        <th scope=\\\"col\\\">Action</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n\\r\\n    <tr *ngFor=\\\"let order of page?.content\\\">\\r\\n        <th class=\\\"align-middle\\\" scope=\\\"row\\\">\\r\\n            {{order.orderId}}\\r\\n        </th>\\r\\n        <td class=\\\"align-middle\\\">{{order.buyerName}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{order.buyerEmail}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{order.buyerPhone}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{order.buyerAddress}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{order.orderAmount | currency:'INR'}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{order.createTime | date}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{OrderStatus[order.orderStatus]}}</td>\\r\\n        <td class=\\\"align-middle\\\">\\r\\n            <a *ngIf=\\\"!(currentUser.role == Role.Customer && currentUser.name == order.buyerEmail)\\\"\\r\\n               style=\\\"display:\\r\\n            block\\\" href=\\\"\\\" routerLink=\\\"/order/{{order.orderId}}\\\">\\r\\n                Show</a>\\r\\n            <a *ngIf=\\\"order.orderStatus == 0\\\" style=\\\"display: block\\\" (click)=\\\"cancel(order)\\\" routerLink=\\\"./\\\">Cancel</a>\\r\\n            <a *ngIf=\\\"currentUser.role != Role.Customer && order.orderStatus == 0\\\"\\r\\n               style=\\\"display: block\\\"\\r\\n               (click)=\\\"finish(order)\\\"\\r\\n               routerLink=\\\"./\\\">\\r\\n                Finish</a>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<app-pagination [currentPage]=\\\"page\\\"></app-pagination>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {OrderService} from \"../../services/order.service\";\r\nimport {Order} from \"../../models/Order\";\r\nimport {OrderStatus} from \"../../enum/OrderStatus\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {JwtResponse} from \"../../response/JwtResponse\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {Role} from \"../../enum/Role\";\r\n\r\n@Component({\r\n    selector: 'app-order',\r\n    templateUrl: './order.component.html',\r\n    styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent implements OnInit, OnDestroy {\r\n\r\n    page: any;\r\n    OrderStatus = OrderStatus;\r\n    currentUser: JwtResponse;\r\n    Role = Role;\r\n    constructor(private httpClient: HttpClient,\r\n                private orderService: OrderService,\r\n                private userService: UserService,\r\n                private route: ActivatedRoute\r\n    ) {\r\n    }\r\n\r\n    querySub: Subscription;\r\n\r\n    ngOnInit() {\r\n        this.currentUser = this.userService.currentUserValue;\r\n        this.querySub = this.route.queryParams.subscribe(() => {\r\n            this.update();\r\n        });\r\n\r\n    }\r\n\r\n    update() {\r\n        let nextPage = 1;\r\n        let size = 10;\r\n        if (this.route.snapshot.queryParamMap.get('page')) {\r\n            nextPage = +this.route.snapshot.queryParamMap.get('page');\r\n            size = +this.route.snapshot.queryParamMap.get('size');\r\n        }\r\n        this.orderService.getPage(nextPage, size).subscribe(page => this.page = page, _ => {\r\n            console.log(\"Get Orde Failed\")\r\n        });\r\n    }\r\n\r\n\r\n    cancel(order: Order) {\r\n        this.orderService.cancel(order.orderId).subscribe(res => {\r\n            if (res) {\r\n                order.orderStatus = res.orderStatus;\r\n            }\r\n        });\r\n    }\r\n\r\n    finish(order: Order) {\r\n        this.orderService.finish(order.orderId).subscribe(res => {\r\n            if (res) {\r\n                order.orderStatus = res.orderStatus;\r\n            }\r\n        })\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.querySub.unsubscribe();\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2R1Y3QtZGV0YWlsL2RldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">{{title}}</h1>\\r\\n<div class=\\\"row text-center justify-content-center\\\">\\r\\n  <div class=\\\"col-lg-6 \\\">\\r\\n    <div class=\\\"card mb-4 \\\">\\r\\n      <img height=\\\"60%\\\" class=\\\"card-img-top\\\" src=\\\"{{productInfo?.productIcon}}\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4 class=\\\"card-title \\\">{{productInfo?.productName}}</h4>\\r\\n        <form name=\\\"form\\\" #form='ngForm' (ngSubmit)=\\\"productInfo?.productStatus == 0 && addToCart()\\\">\\r\\n          <div class=\\\"text-left\\\">\\r\\n            <input hidden name=\\\"productId\\\" [value]=productInfo?.productId>\\r\\n            <p class=\\\"card-test\\\"><strong>Description: </strong>{{productInfo?.productDescription}}</p>\\r\\n            <p class=\\\"card-text\\\">\\r\\n              <strong>Price: </strong>\\r\\n              <label id=\\\"price\\\">{{productInfo?.productPrice | currency:'INR'}}</label>\\r\\n            </p>\\r\\n            <p class=\\\"card-text\\\"><strong>Stock: </strong>{{productInfo?.productStock}}</p>\\r\\n\\r\\n            <label class=\\\"card-text\\\">\\r\\n              <strong>Quantity: </strong>\\r\\n              <input [(ngModel)]=count\\r\\n                     (change)=\\\"validateCount()\\\"\\r\\n                     type=\\\"number\\\"\\r\\n                     name=\\\"count\\\"\\r\\n                     required\\r\\n                     min=\\\"1\\\"\\r\\n                     [max]=productInfo?.productStock\\r\\n              >\\r\\n            </label>\\r\\n\\r\\n\\r\\n            <p class=\\\"card-text\\\"><strong>Subtotal: </strong>\\r\\n              <label id=\\\"subtotal\\\">{{count * productInfo?.productPrice | currency:'INR'}}</label>\\r\\n            </p>\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" [disabled]=\\\"!form.form.valid\\\" *ngIf=\\\"productInfo?.productStatus == 0; else offBlock\\\"\\r\\n                  class=\\\"btn btn-primary btn-lg\\\"\\r\\n          >Add to Cart\\r\\n          </button>\\r\\n          <ng-template #offBlock><a class=\\\"btn btn-secondary btn-lg disabled\\\">Unavailable</a></ng-template>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ProductService} from '../../services/product.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {CartService} from '../../services/cart.service';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {ProductInOrder} from '../../models/ProductInOrder';\r\nimport {ProductInfo} from '../../models/productInfo';\r\n\r\n@Component({\r\n  selector: 'app-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.css']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n  title: string;\r\n  count: number;\r\n  productInfo: ProductInfo;\r\n\r\n  constructor(\r\n      private productService: ProductService,\r\n      private cartService: CartService,\r\n      private cookieService: CookieService,\r\n      private route: ActivatedRoute,\r\n      private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getProduct();\r\n    this.title = 'Product Detail';\r\n    this.count = 1;\r\n  }\r\n\r\n  // ngOnChanges(changes: SimpleChanges): void {\r\n  //   // Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\r\n  //   // Add '${implements OnChanges}' to the class.\r\n  //   console.log(changes);\r\n  //   if (this.item.quantity in changes) {\r\n\r\n  //   }\r\n  // }\r\n\r\n  getProduct(): void {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    this.productService.getDetail(id).subscribe(\r\n        prod => {\r\n          this.productInfo = prod;\r\n        },\r\n        _ => console.log('Get Cart Failed')\r\n    );\r\n  }\r\n\r\n  addToCart() {\r\n    this.cartService\r\n        .addItem(new ProductInOrder(this.productInfo, this.count))\r\n        .subscribe(\r\n            res => {\r\n              if (!res) {\r\n                console.log('Add Cart failed' + res);\r\n                throw new Error();\r\n              }\r\n              this.router.navigateByUrl('/cart');\r\n            },\r\n            _ => console.log('Add Cart Failed')\r\n        );\r\n  }\r\n\r\n  validateCount() {\r\n    console.log('Validate');\r\n    const max = this.productInfo.productStock;\r\n    if (this.count > max) {\r\n      this.count = max;\r\n    } else if (this.count < 1) {\r\n      this.count = 1;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2R1Y3QtZWRpdC9wcm9kdWN0LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Edit Product</h1>\\r\\n<div style=\\\"width:40%; margin: 25px auto\\\">\\r\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <!--Id-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"productId\\\">Code</label>\\r\\n            <input [readOnly]=\\\"isEdit\\\" [disabled]=\\\"isEdit\\\" [(ngModel)]=\\\"product.productId\\\" type=\\\"text\\\"\\r\\n                   class=\\\"form-control form-control-lg\\\" #productIdInput\\r\\n                   id=\\\"productId\\\" name=\\\"productId\\\" required #productId=\\\"ngModel\\\">\\r\\n            <div *ngIf=\\\"productIdInput.invalid && (productIdInput.dirty ||productIdInput.touched)\\\">\\r\\n                <div *ngIf=\\\"productIdInput.errors.required\\\">\\r\\n                    Name is required.\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--Photo-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Photo Link</label>\\r\\n            <input [(ngModel)]=\\\"product.productIcon\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"productIcon\\\"\\r\\n                   name=\\\"productIcon\\\" placeholder=\\\"Photo\\\">\\r\\n        </div>\\r\\n\\r\\n        <!--Name-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Name</label>\\r\\n            <input [(ngModel)]=\\\"product.productName\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"productName\\\"\\r\\n                   #productName=\\\"ngModel\\\"\\r\\n                   name=\\\"productName\\\" placeholder=\\\"Name\\\" required>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"productName.invalid && (productName.dirty ||productName.touched)\\\">\\r\\n            <div *ngIf=\\\"productName.errors.required\\\">\\r\\n                Name is required.\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!--Category-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"categoryType\\\">Category</label>\\r\\n            <select class=\\\"custom-select custom-select-lg \\\" id=\\\"categoryType\\\" name=\\\"categoryType\\\"\\r\\n                    [(ngModel)]=\\\"product.categoryType\\\"\\r\\n                    required>\\r\\n                <option [ngValue]=0>Books</option>\\r\\n                <option [ngValue]=1>Food</option>\\r\\n                <option [ngValue]=2>Clothes</option>\\r\\n                <option [ngValue]=3>Drink</option>\\r\\n            </select>\\r\\n        </div>\\r\\n\\r\\n        <!--Description-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Description</label>\\r\\n            <textarea class=\\\"form-control form-control-lg text-left\\\"\\r\\n                      id=\\\"productDescription\\\" name=\\\"productDescription\\\"\\r\\n                      placeholder=\\\"Description\\\" [(ngModel)]=\\\"product.productDescription\\\"></textarea>\\r\\n        </div>\\r\\n        <!--Price-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"productPrice\\\">Price</label>\\r\\n            <input class=\\\"form-control form-control-lg\\\"\\r\\n                   type=\\\"number\\\"\\r\\n                   id=\\\"productPrice\\\"\\r\\n                   name=\\\"productPrice\\\"\\r\\n                   #productPrice=\\\"ngModel\\\"\\r\\n                   [ngModel]=\\\"product.productPrice\\\" (ngModelChange)=\\\"product.productPrice=$event\\\"\\r\\n                   required>\\r\\n            <div *ngIf=\\\"productPrice.invalid && (productPrice.dirty ||productPrice.touched)\\\">\\r\\n                <div *ngIf=\\\"productPrice.errors.required\\\">\\r\\n                    Price is required.\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--Stock-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"productStock\\\">Stock</label>\\r\\n            <input class=\\\"form-control form-control-lg\\\"\\r\\n                   type=\\\"number\\\"\\r\\n                   id=\\\"productStock\\\"\\r\\n                   name=\\\"productStock\\\"\\r\\n                   min=\\\"0\\\" #productStock=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"product.productStock\\\"\\r\\n                   required>\\r\\n            <div *ngIf=\\\"productStock.invalid && (productStock.dirty ||productStock.touched)\\\">\\r\\n                <div *ngIf=\\\"productStock.errors.required\\\">\\r\\n                    Stock is required.\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--Status-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"productStatus\\\">Status</label>\\r\\n            <select class=\\\"custom-select custom-select-lg \\\" id=\\\"productStatus\\\" name=\\\"productStatus\\\" required\\r\\n                    [(ngModel)]=\\\"product.productStatus\\\">\\r\\n                <option [ngValue]=0>Available</option>\\r\\n                <option [ngValue]=1>Unavailable</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <button type=\\\"submit\\\" [disabled]=\\\"!form.form.valid\\\" class=\\\"btn btn-lg btn-primary btn-block\\\">Submit</button>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import {AfterContentChecked, Component, OnInit} from '@angular/core';\r\nimport {ProductInfo} from \"../../models/productInfo\";\r\nimport {ProductService} from \"../../services/product.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-product-edit',\r\n    templateUrl: './product-edit.component.html',\r\n    styleUrls: ['./product-edit.component.css']\r\n})\r\nexport class ProductEditComponent implements OnInit, AfterContentChecked {\r\n\r\n    product = new ProductInfo();\r\n\r\n    constructor(private productService: ProductService,\r\n                private route: ActivatedRoute,\r\n                private router: Router) {\r\n    }\r\n\r\n    productId: string;\r\n    isEdit = false;\r\n\r\n    ngOnInit() {\r\n        this.productId = this.route.snapshot.paramMap.get('id');\r\n        if (this.productId) {\r\n            this.isEdit = true;\r\n            this.productService.getDetail(this.productId).subscribe(prod => this.product = prod);\r\n        }\r\n\r\n    }\r\n\r\n    update() {\r\n        this.productService.update(this.product).subscribe(prod => {\r\n                if (!prod) throw new Error();\r\n                this.router.navigate(['/seller']);\r\n            },\r\n            err => {\r\n            });\r\n\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.productId) {\r\n            this.update();\r\n        } else {\r\n            this.add();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.productService.create(this.product).subscribe(prod => {\r\n                if (!prod) throw new Error;\r\n                this.router.navigate(['/']);\r\n            },\r\n            e => {\r\n            });\r\n    }\r\n\r\n    ngAfterContentChecked(): void {\r\n        console.log(this.product);\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2R1Y3QtbGlzdC9wcm9kdWN0Lmxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 \\\">Products</h1>\\r\\n<a *ngIf=\\\"currentUser?.role == EMPLOYEE \\\" style=\\\"color: inherit\\\"\\r\\n   routerLink=\\\"/seller/product/new\\\" class=\\\"float-right mb-3\\\"><i class=\\\"fas fa-plus fa-2x\\\">Add Product</i>\\r\\n</a>\\r\\n<table id=\\\"table\\\" class=\\\"table table-striped text-center\\\" style=\\\"width:100%;\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th scope=\\\"col\\\">Photo</th>\\r\\n        <th scope=\\\"col\\\">Code</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n        <th scope=\\\"col\\\">Type</th>\\r\\n        <th scope=\\\"col\\\">Description</th>\\r\\n        <th scope=\\\"col\\\">Price</th>\\r\\n        <th scope=\\\"col\\\">Stock</th>\\r\\n        <th scope=\\\"col\\\">Status</th>\\r\\n        <th scope=\\\"col\\\">Action</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let productInfo of page?.content\\\">\\r\\n        <th class=\\\"align-middle\\\" scope=\\\"row\\\">\\r\\n            <img height=\\\"100px\\\" src=\\\"{{productInfo.productIcon}}\\\" alt=\\\"{{productInfo.productName}}\\\">\\r\\n        </th>\\r\\n        <td class=\\\"align-middle\\\">{{productInfo.productId}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{productInfo.productName}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{CategoryType[productInfo.categoryType]}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{productInfo.productDescription}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{productInfo.productPrice | currency:'INR'}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{productInfo.productStock}}</td>\\r\\n        <td class=\\\"align-middle\\\">{{ProductStatus[productInfo.productStatus]}}</td>\\r\\n        <td class=\\\"align-middle\\\">\\r\\n            <a style=\\\"display: block\\\" routerLink=\\\"/seller/product/{{productInfo.productId}}/edit\\\">\\r\\n                Edit</a>\\r\\n\\r\\n            <a *ngIf=\\\"currentUser?.role == Role.Customer\\\" style=\\\"display: block\\\"\\r\\n               (click)=\\\"remove(page.content, productInfo.productId)\\\" routerLink=\\\"./\\\">\\r\\n                Remove</a>\\r\\n        </td>\\r\\n\\r\\n    </tbody>\\r\\n</table>\\r\\n<app-pagination [currentPage]=\\\"page\\\"></app-pagination>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {ProductService} from \"../../services/product.service\";\r\nimport {JwtResponse} from \"../../response/JwtResponse\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {CategoryType} from \"../../enum/CategoryType\";\r\nimport {ProductStatus} from \"../../enum/ProductStatus\";\r\nimport {ProductInfo} from \"../../models/productInfo\";\r\nimport {Role} from \"../../enum/Role\";\r\n\r\n@Component({\r\n    selector: 'app-product.list',\r\n    templateUrl: './product.list.component.html',\r\n    styleUrls: ['./product.list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit, OnDestroy {\r\n\r\n    constructor(private userService: UserService,\r\n                private productService: ProductService,\r\n                private route: ActivatedRoute) {\r\n    }\r\n\r\n    Role = Role;\r\n    currentUser: JwtResponse;\r\n    page: any;\r\n    CategoryType = CategoryType;\r\n    ProductStatus = ProductStatus;\r\n    private querySub: Subscription;\r\n\r\n    ngOnInit() {\r\n        this.querySub = this.route.queryParams.subscribe(() => {\r\n            this.update();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.querySub.unsubscribe();\r\n    }\r\n\r\n    update() {\r\n        if (this.route.snapshot.queryParamMap.get('page')) {\r\n            const currentPage = +this.route.snapshot.queryParamMap.get('page');\r\n            const size = +this.route.snapshot.queryParamMap.get('size');\r\n            this.getProds(currentPage, size);\r\n        } else {\r\n            this.getProds();\r\n        }\r\n    }\r\n\r\n    getProds(page: number = 1, size: number = 5) {\r\n        this.productService.getAllInPage(+page, +size)\r\n            .subscribe(page => {\r\n                this.page = page;\r\n            });\r\n\r\n    }\r\n\r\n\r\n    remove(productInfos: ProductInfo[], productInfo) {\r\n        this.productService.delelte(productInfo).subscribe(_ => {\r\n                productInfos = productInfos.filter(e => e.productId != productInfo);\r\n            },\r\n            err => {\r\n            });\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Sign Up</h1>\\r\\n<div style=\\\"width:40%; margin: 25px auto\\\" >\\r\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label><b>Email address</b></label>\\r\\n      <input [(ngModel)]=\\\"user.email\\\" type=\\\"email\\\" class=\\\"form-control form-control-lg\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" email required autofocus  #email=\\\"ngModel\\\">\\r\\n      <div  *ngIf=\\\"email.invalid && (email.dirty ||email.touched)\\\" >\\r\\n          <div *ngIf=\\\"email.errors.required\\\" >\\r\\n              Email is required.\\r\\n          </div>\\r\\n          <div *ngIf=\\\"email.errors.email\\\">\\r\\n              Invalid Email.\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label><b>Name</b></label>\\r\\n      <input [(ngModel)]=\\\"user.name\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Your name\\\" required #name=\\\"ngModel\\\">\\r\\n        <div  *ngIf=\\\"name.invalid && (name.dirty ||name.touched)\\\">\\r\\n            <div *ngIf=\\\"name.errors.required\\\">\\r\\n                Name is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"name.errors.minlength\\\">\\r\\n                Name must be at least 3 characters long.\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label><b>Password</b></label>\\r\\n      <input  [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" class=\\\"form-control form-control-lg\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" minlength=\\\"3\\\" required #password=\\\"ngModel\\\">\\r\\n        <div  *ngIf=\\\"password.invalid && (password.dirty ||password.touched)\\\">\\r\\n            <div *ngIf=\\\"password.errors.required\\\">\\r\\n                Password is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"password.errors.minlength\\\">\\r\\n                Password must be at least 3 characters long.\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label><b>Phone</b></label>\\r\\n      <input [(ngModel)]=\\\"user.phone\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"phone\\\" name=\\\"phone\\\" placeholder=\\\"Phone\\\" minlength=\\\"10\\\" required #phone=\\\"ngModel\\\" >\\r\\n        <div  *ngIf=\\\"phone.invalid && (phone.dirty ||phone.touched)\\\">\\r\\n            <div *ngIf=\\\"phone.errors.required\\\">\\r\\n                Phone is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"phone.errors.minlength\\\">\\r\\n              Phone number be at 10 characters.\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label><b>Address</b></label>\\r\\n      <input [(ngModel)]=\\\"user.address\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" required #address=\\\"ngModel\\\">\\r\\n        <div  *ngIf=\\\"address.invalid && (address.dirty ||address.touched)\\\">\\r\\n            <div *ngIf=\\\"address.errors.required\\\">\\r\\n                Address is required.\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" [disabled]=\\\"!form.form.valid\\\" >Sign Up</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {User} from \"../../models/User\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  user: User;\r\n\r\n  constructor( private location: Location,\r\n               private userService: UserService,\r\n               private router: Router) {\r\n    this.user = new User();\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n  onSubmit() {\r\n    this.userService.signUp(this.user).subscribe(u => {\r\n      this.router.navigate(['/login']);\r\n    },\r\n        e => {});\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItZWRpdC91c2VyLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Edit Profiles</h1>\\r\\n<div style=\\\"width:40%; margin: 25px auto\\\" >\\r\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label><b>Email address</b></label>\\r\\n        <input readonly [value]=user?.email type=\\\"email\\\" class=\\\"form-control form-control-lg \\\" disabled id=\\\"email\\\"\\r\\n               name=\\\"email\\\" placeholder=\\\"Enter email\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label><b>Name</b></label>\\r\\n      <input [(ngModel)]=\\\"user.name\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Your name\\\" required #name=\\\"ngModel\\\" autofocus>\\r\\n      <div  *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\">\\r\\n        <div *ngIf=\\\"name.errors.required\\\">\\r\\n          Name is required.\\r\\n        </div>\\r\\n        <div *ngIf=\\\"name.errors.minlength\\\">\\r\\n          Name must be at least 3 characters long.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label><b>Password</b></label>\\r\\n      <input  [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" class=\\\"form-control form-control-lg\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" minlength=\\\"3\\\" required #password=\\\"ngModel\\\">\\r\\n      <div  *ngIf=\\\"password.invalid && (password.dirty ||password.touched)\\\">\\r\\n        <div *ngIf=\\\"password.errors.required\\\">\\r\\n          Password is required.\\r\\n        </div>\\r\\n        <div *ngIf=\\\"password.errors.minlength\\\">\\r\\n          Password must be at least 3 characters long.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label><b>Phone</b></label>\\r\\n      <input [(ngModel)]=\\\"user.phone\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"phone\\\" name=\\\"phone\\\" placeholder=\\\"Phone\\\" required #phone=\\\"ngModel\\\" >\\r\\n      <div  *ngIf=\\\"phone.invalid && (phone.dirty ||phone.touched)\\\">\\r\\n        <div *ngIf=\\\"phone.errors.required\\\">\\r\\n          Phone is required.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label><b>Address</b></label>\\r\\n      <input [(ngModel)]=\\\"user.address\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" required #address=\\\"ngModel\\\">\\r\\n      <div  *ngIf=\\\"address.invalid && (address.dirty ||address.touched)\\\">\\r\\n        <div *ngIf=\\\"address.errors.required\\\">\\r\\n          Address is required.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" [disabled]=\\\"!form.form.valid\\\" >Update</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {User} from \"../../models/User\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Observable, Subject} from \"rxjs\";\r\nimport {Role} from \"../../enum/Role\";\r\n\r\n@Component({\r\n    selector: 'app-user-detail',\r\n    templateUrl: './user-detail.component.html',\r\n    styleUrls: ['./user-detail.component.css']\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n\r\n\r\n\r\n\r\n    constructor(private userService: UserService,\r\n                private router: Router) {\r\n    }\r\n\r\n    user= new User();\r\n\r\n\r\n    ngOnInit() {\r\n        const account = this.userService.currentUserValue.account;\r\n\r\n        this.userService.get(account).subscribe( u => {\r\n            this.user = u;\r\n            this.user.password = '';\r\n        }, e => {\r\n\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.userService.update(this.user).subscribe(u => {\r\n            this.userService.nameTerms.next(u.name);\r\n            let url = '/';\r\n            if (this.user.role != Role.Customer) {\r\n                url = '/seller';\r\n            }\r\n            this.router.navigateByUrl(url);\r\n        }, _ => {})\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRzL25hdmlnYXRpb24vbmF2aWdhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"root\\\">\\r\\n        <img src=\\\"/assets/brand.png\\\" width=\\\"40\\\" height=\\\"40\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\r\\n        Dataoct Shopping Mart\\r\\n    </a>\\r\\n\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\r\\n            aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n\\r\\n        <div class=\\\"navbar-nav\\\" *ngIf=\\\"!currentUser || currentUser.role == Role.Customer\\\">\\r\\n\\r\\n            <a class=\\\"nav-item nav-link \\\"\\r\\n               routerLink=\\\"/category/0\\\">\\r\\n                Books\\r\\n            </a>\\r\\n            <a class=\\\"nav-item nav-link\\\"\\r\\n               routerLink=\\\"/category/1\\\">\\r\\n                Food\\r\\n            </a>\\r\\n            <a class=\\\"nav-item nav-link \\\"\\r\\n               routerLink=\\\"/category/2\\\">\\r\\n                Clothes\\r\\n            </a>\\r\\n            <a class=\\\"nav-item nav-link\\\"\\r\\n               routerLink=\\\"/category/3\\\">\\r\\n                Drink\\r\\n            </a>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"navbar-nav ml-auto\\\">\\r\\n            <a *ngIf=\\\"!currentUser || currentUser.role == Role.Customer\\\"\\r\\n                    class=\\\"nav-item nav-link \\\" routerLink=\\\"/cart\\\">\\r\\n                <i class=\\\"fas fa-shopping-cart\\\"></i>\\r\\n                Cart\\r\\n            </a>\\r\\n\\r\\n            <ng-container *ngIf=\\\"currentUser; else noUser\\\">\\r\\n                <a class=\\\"nav-item nav-link \\\" routerLink=\\\"/order\\\">\\r\\n                    <i class=\\\"fas fa-list-ul\\\"></i>\\r\\n                    Orders\\r\\n                </a>\\r\\n                <a class=\\\"nav-item nav-link \\\" routerLink=\\\"/profile\\\">\\r\\n                    {{name}}\\r\\n                </a>\\r\\n                <a class=\\\"nav-item nav-link \\\" (click)=\\\"logout()\\\" routerLink=\\\"/login\\\" [queryParams]=\\\"{logout: true}\\\">\\r\\n                    Sign Out\\r\\n                </a>\\r\\n            </ng-container>\\r\\n            <ng-template #noUser>\\r\\n                <a class=\\\"nav-item nav-link \\\" routerLink=\\\"/login\\\">\\r\\n                    Sign In\\r\\n                </a>\\r\\n                <a class=\\\"nav-item nav-link \\\" routerLink=\\\"/register\\\">\\r\\n                    Sign Up\\r\\n                </a>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {JwtResponse} from \"../../response/JwtResponse\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Role} from \"../../enum/Role\";\r\n\r\n@Component({\r\n    selector: 'app-navigation',\r\n    templateUrl: './navigation.component.html',\r\n    styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit, OnDestroy {\r\n\r\n\r\n    currentUserSubscription: Subscription;\r\n    name$;\r\n    name: string;\r\n    currentUser: JwtResponse;\r\n    root = '/';\r\n    Role = Role;\r\n\r\n    constructor(private userService: UserService,\r\n                private router: Router,\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.name$ = this.userService.name$.subscribe(aName => this.name = aName);\r\n        this.currentUserSubscription = this.userService.currentUser.subscribe(user => {\r\n            this.currentUser = user;\r\n            if (!user || user.role == Role.Customer) {\r\n                this.root = '/';\r\n            } else {\r\n                this.root = '/seller';\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.currentUserSubscription.unsubscribe();\r\n        // this.name$.unsubscribe();\r\n    }\r\n\r\n    logout() {\r\n        this.userService.logout();\r\n        // this.router.navigate(['/login'], {queryParams: {logout: 'true'}} );\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRzL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"col-md-12 column\\\">\\r\\n  <ul class=\\\"pagination justify-content-end\\\">\\r\\n      <li class=\\\"page-item\\\" *ngIf=\\\"currentPage?.number > 0; else prev\\\">\\r\\n          <a\\r\\n                  class=\\\"page-link\\\"\\r\\n                  [routerLink]=\\\"['./']\\\"\\r\\n                  [queryParams]=\\\"{ page: currentPage?.number, size: currentPage?.size }\\\"\\r\\n          >Previous</a\\r\\n          >\\r\\n    </li>\\r\\n      <ng-template #prev>\\r\\n          <li class=\\\"page-item  disabled\\\"><a class=\\\"page-link\\\">Previous</a></li>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-container *ngFor=\\\"let item of counter(currentPage?.totalPages); let i = index\\\">\\r\\n          <li class=\\\"page-item\\\" *ngIf=\\\"currentPage && currentPage.number != i; else active\\\">\\r\\n            <a class=\\\"page-link \\\"\\r\\n                    routerLink=\\\"./\\\"\\r\\n                    [queryParams]=\\\"{ page: i + 1, size: currentPage?.size }\\\"\\r\\n            >{{ i + 1 }}</a\\r\\n            >\\r\\n        </li>\\r\\n          <ng-template #active> \\r\\n              <li\\r\\n                      class=\\\"page-item active \\\"\\r\\n\\r\\n              >\\r\\n                  <button class=\\\"page-link \\\" disabled>{{ i + 1 }}</button>\\r\\n              </li>\\r\\n          </ng-template>\\r\\n      </ng-container>\\r\\n\\r\\n      <li\\r\\n              class=\\\"page-item\\\"\\r\\n              *ngIf=\\\"currentPage?.number + 1 < currentPage?.totalPages; else next\\\"\\r\\n      >\\r\\n          <a\\r\\n                  class=\\\"page-link\\\"\\r\\n                  [routerLink]=\\\"['./']\\\"\\r\\n                  [queryParams]=\\\"{\\r\\n          page: currentPage?.number + 2,\\r\\n          size: currentPage?.size\\r\\n        }\\\"\\r\\n          >Next</a\\r\\n          >\\r\\n    </li>\\r\\n    <ng-template #next>\\r\\n        <li class=\\\"page-item disabled \\\"><a class=\\\"page-link\\\">Next</a></li>\\r\\n    </ng-template>\\r\\n  </ul>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.css']\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n\r\n  @Input() currentPage: any;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  counter(i = 1) {\r\n    return new Array(i);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {apiUrl} from '../../environments/environment';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\nimport {catchError, map, tap} from 'rxjs/operators';\r\nimport {UserService} from './user.service';\r\nimport {Cart} from '../models/Cart';\r\nimport {Item} from '../models/Item';\r\nimport {JwtResponse} from '../response/JwtResponse';\r\nimport {ProductInOrder} from '../models/ProductInOrder';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n\r\n    private cartUrl = `${apiUrl}/cart`;\r\n\r\n    localMap = {};\r\n\r\n\r\n    private itemsSubject: BehaviorSubject<Item[]>;\r\n    private totalSubject: BehaviorSubject<number>;\r\n    public items: Observable<Item[]>;\r\n    public total: Observable<number>;\r\n\r\n\r\n    private currentUser: JwtResponse;\r\n\r\n    constructor(private http: HttpClient,\r\n                private cookieService: CookieService,\r\n                private userService: UserService) {\r\n        this.itemsSubject = new BehaviorSubject<Item[]>(null);\r\n        this.items = this.itemsSubject.asObservable();\r\n        this.totalSubject = new BehaviorSubject<number>(null);\r\n        this.total = this.totalSubject.asObservable();\r\n        this.userService.currentUser.subscribe(user => this.currentUser = user);\r\n\r\n\r\n    }\r\n\r\n    private getLocalCart(): ProductInOrder[] {\r\n        if (this.cookieService.check('cart')) {\r\n            this.localMap = JSON.parse(this.cookieService.get('cart'));\r\n            return Object.values(this.localMap);\r\n        } else {\r\n            this.localMap = {};\r\n            return [];\r\n        }\r\n    }\r\n\r\n    getCart(): Observable<ProductInOrder[]> {\r\n        const localCart = this.getLocalCart();\r\n        if (this.currentUser) {\r\n            if (localCart.length > 0) {\r\n                return this.http.post<Cart>(this.cartUrl, localCart).pipe(\r\n                    tap(_ => {\r\n                        this.clearLocalCart();\r\n                    }),\r\n                    map(cart => cart.products),\r\n                    catchError(_ => of([]))\r\n                );\r\n            } else {\r\n                return this.http.get<Cart>(this.cartUrl).pipe(\r\n                    map(cart => cart.products),\r\n                    catchError(_ => of([]))\r\n                );\r\n            }\r\n        } else {\r\n            return of(localCart);\r\n        }\r\n    }\r\n\r\n    addItem(productInOrder): Observable<boolean> {\r\n        if (!this.currentUser) {\r\n            if (this.cookieService.check('cart')) {\r\n                this.localMap = JSON.parse(this.cookieService.get('cart'));\r\n            }\r\n            if (!this.localMap[productInOrder.productId]) {\r\n                this.localMap[productInOrder.productId] = productInOrder;\r\n            } else {\r\n                this.localMap[productInOrder.productId].count += productInOrder.count;\r\n            }\r\n            this.cookieService.set('cart', JSON.stringify(this.localMap));\r\n            return of(true);\r\n        } else {\r\n            const url = `${this.cartUrl}/add`;\r\n            return this.http.post<boolean>(url, {\r\n                'quantity': productInOrder.count,\r\n                'productId': productInOrder.productId\r\n            });\r\n        }\r\n    }\r\n\r\n    update(productInOrder): Observable<ProductInOrder> {\r\n\r\n        if (this.currentUser) {\r\n            const url = `${this.cartUrl}/${productInOrder.productId}`;\r\n            return this.http.put<ProductInOrder>(url, productInOrder.count);\r\n        }\r\n    }\r\n\r\n\r\n    remove(productInOrder) {\r\n        if (!this.currentUser) {\r\n            delete this.localMap[productInOrder.productId];\r\n            return of(null);\r\n        } else {\r\n            const url = `${this.cartUrl}/${productInOrder.productId}`;\r\n            return this.http.delete(url).pipe( );\r\n        }\r\n    }\r\n\r\n\r\n    checkout(): Observable<any> {\r\n        const url = `${this.cartUrl}/checkout`;\r\n        return this.http.post(url, null).pipe();\r\n    }\r\n\r\n    storeLocalCart() {\r\n        this.cookieService.set('cart', JSON.stringify(this.localMap));\r\n    }\r\n\r\n    clearLocalCart() {\r\n        console.log('clear local cart');\r\n        this.cookieService.delete('cart');\r\n        this.localMap = {};\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {catchError} from \"rxjs/operators\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {Order} from \"../models/Order\";\r\nimport {apiUrl} from \"../../environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n    private orderUrl = `${apiUrl}/order`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getPage(page = 1, size = 10): Observable<any> {\r\n        return this.http.get(`${this.orderUrl}?page=${page}&size=${size}`).pipe();\r\n    }\r\n\r\n    show(id): Observable<Order> {\r\n        return this.http.get<Order>(`${this.orderUrl}/${id}`).pipe(\r\n            catchError(_ => of(null))\r\n        );\r\n    }\r\n\r\n    cancel(id): Observable<Order> {\r\n        return this.http.patch<Order>(`${this.orderUrl}/cancel/${id}`, null).pipe(\r\n            catchError(_ => of(null))\r\n        );\r\n    }\r\n\r\n    finish(id): Observable<Order> {\r\n        return this.http.patch<Order>(`${this.orderUrl}/finish/${id}`, null).pipe(\r\n            catchError(_ => of(null))\r\n        );\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {ProductInfo} from '../models/productInfo';\r\nimport {apiUrl} from '../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n    private productUrl = `${apiUrl}/product`;\r\n    private categoryUrl = `${apiUrl}/category`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAllInPage(page: number, size: number): Observable<any> {\r\n        const url = `${this.productUrl}?page=${page}&size=${size}`;\r\n        return this.http.get(url)\r\n            .pipe(\r\n                // tap(_ => console.log(_)),\r\n            )\r\n    }\r\n\r\n    getCategoryInPage(categoryType: number, page: number, size: number): Observable<any> {\r\n        const url = `${this.categoryUrl}/${categoryType}?page=${page}&size=${size}`;\r\n        return this.http.get(url).pipe(\r\n            // tap(data => console.log(data))\r\n        );\r\n    }\r\n\r\n    getDetail(id: String): Observable<ProductInfo> {\r\n        const url = `${this.productUrl}/${id}`;\r\n        return this.http.get<ProductInfo>(url).pipe(\r\n            catchError(_ => {\r\n                console.log(\"Get Detail Failed\");\r\n                return of(new ProductInfo());\r\n            })\r\n        );\r\n    }\r\n\r\n    update(productInfo: ProductInfo): Observable<ProductInfo> {\r\n        const url = `${apiUrl}/seller/product/${productInfo.productId}/edit`;\r\n        return this.http.put<ProductInfo>(url, productInfo);\r\n    }\r\n\r\n    create(productInfo: ProductInfo): Observable<ProductInfo> {\r\n        const url = `${apiUrl}/seller/product/new`;\r\n        return this.http.post<ProductInfo>(url, productInfo);\r\n    }\r\n\r\n\r\n    delelte(productInfo: ProductInfo): Observable<any> {\r\n        const url = `${apiUrl}/seller/product/${productInfo.productId}/delete`;\r\n        return this.http.delete(url);\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle Http operation that failed.\r\n     * Let the app continue.\r\n     * @param operation - name of the operation that failed\r\n     * @param result - optional value to return as the observable result\r\n     */\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            console.error(error); // log to console instead\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {apiUrl} from '../../environments/environment';\r\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {JwtResponse} from '../response/JwtResponse';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {User} from \"../models/User\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n    private currentUserSubject: BehaviorSubject<JwtResponse>;\r\n    public currentUser: Observable<JwtResponse>;\r\n    public nameTerms = new Subject<string>();\r\n    public name$ = this.nameTerms.asObservable();\r\n    constructor(private http: HttpClient,\r\n                private cookieService: CookieService) {\r\n        const memo = localStorage.getItem('currentUser');\r\n        this.currentUserSubject = new BehaviorSubject<JwtResponse>(JSON.parse(memo));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n        cookieService.set('currentUser', memo);\r\n    }\r\n\r\n    get currentUserValue() {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n\r\n    login(loginForm): Observable<JwtResponse> {\r\n        const url = `${apiUrl}/login`;\r\n        return this.http.post<JwtResponse>(url, loginForm).pipe(\r\n            tap(user => {\r\n                if (user && user.token) {\r\n                    this.cookieService.set('currentUser', JSON.stringify(user));\r\n                    if (loginForm.remembered) {\r\n                        localStorage.setItem('currentUser', JSON.stringify(user));\r\n                    }\r\n                    console.log((user.name));\r\n                    this.nameTerms.next(user.name);\r\n                    this.currentUserSubject.next(user);\r\n                    return user;\r\n                }\r\n            }),\r\n            catchError(this.handleError('Login Failed', null))\r\n        );\r\n    }\r\n\r\n    logout() {\r\n        this.currentUserSubject.next(null);\r\n        localStorage.removeItem('currentUser');\r\n        this.cookieService.delete('currentUser');\r\n    }\r\n\r\n    signUp(user: User): Observable<User> {\r\n        const url = `${apiUrl}/register`;\r\n        return this.http.post<User>(url, user);\r\n    }\r\n\r\n    update(user: User): Observable<User> {\r\n        const url = `${apiUrl}/profile`;\r\n        return this.http.put<User>(url, user);    }\r\n\r\n    get(email: string): Observable<User> {\r\n        const url = `${apiUrl}/profile/${email}`;\r\n        return this.http.get<User>(url);\r\n    }\r\n\r\n    /**\r\n     * Handle Http operation that failed.\r\n     * Let the app continue.\r\n     * @param operation - name of the operation that failed\r\n     * @param result - optional value to return as the observable result\r\n     */\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            console.log(error); // log to console instead\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n export const apiUrl = '//localhost:8080/api';\r\n//export const apiUrl = '//shop.ap-south-1.elasticbeanstalk.com/api';\r\n\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}